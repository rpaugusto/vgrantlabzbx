#version: '3'

services:
  ## GRAFANA ##
  grafana:
    build:
      context: .
      dockerfile: grafana/Dockerfile
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=grafana
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - monitoring-net
    restart: unless-stopped

  ## ZABBIX ##
  zabbix-mysql:
    image: mysql:8.0 # Use the latest Mysql image
    container_name: ${ZABBIX_MYSQL} # Set the container name
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${ZABBIX_DB_NAME}
      MYSQL_USER: ${ZABBIX_DB_USER}
      MYSQL_PASSWORD: ${ZABBIX_DB_PASSWORD}
      TZ: ${TZ}
    command: 
      - --character-set-server=utf8mb4 
      - --collation-server=utf8mb4_bin
      - --log-bin-trust-function-creators=1
    ports:
      - "3306:3306"
    volumes:
      - mysql-storage:/var/lib/mysql # Persist MySql data
    networks:
      - monitoring-net  # Assign the network
    restart: unless-stopped

  zabbix-server:
    image: zabbix/zabbix-server-mysql:latest
    container_name: ${ZBX_SERVER}  # Set the container name
    restart: unless-stopped
    environment:
      DB_SERVER_HOST: ${ZABBIX_MYSQL}
      MYSQL_DATABASE: ${ZABBIX_DB_NAME}
      MYSQL_USER: ${ZABBIX_DB_USER}
      MYSQL_PASSWORD: ${ZABBIX_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      ZBX_ENABLE_JAVASCRIPT: 'true'
      PHP_TZ: ${TZ}
    depends_on:
      - ${ZABBIX_MYSQL}
    ports:
      - "10051:10051"
    volumes:
      - /usr/local/bin:/usr/local/bin:ro  # Mount the host Python directory in the container
      - zabbix-storage:/var/lib/zabbix
      - zabbix-externalscripts:/usr/lib/zabbix/externalscripts:ro
    networks:
      - monitoring-net  # Assign the network
  
  zabbix-web:
    image: zabbix/zabbix-web-nginx-mysql:latest
    container_name: ${ZBX_WEB} # Set the container name
    restart: unless-stopped
    environment:
      ZBX_SERVER_HOST: ${ZBX_SERVER}
      ZBX_SERVER_PORT: 10051
      ZBX_SERVER_NAME: ZabbixLab
      DB_SERVER_HOST: ${ZBX_MYSQL}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PHP_TZ: ${TZ}
    depends_on:
      - ${ZBX_MYSQL}
      - ${ZBX_SERVER}
    ports:
      - "80:8080"
      - "443:8443"
    volumes:
      - ./stack/zabbix/web/nginx_status.conf:/etc/nginx/conf.d/nginx_status.conf:ro
    networks:
      - monitoring-net  # Assign the network
  
  zabbix-agent2:
    image: zabbix/zabbix-agent2:alpine-6.4-latest
    container_name: ${ZBX_AGENT} # Set the container name
    restart: unless-stopped
    environment:
      ZBX_HOSTNAME: ${ZBX_AGENT}
      ZBX_SERVER_HOST: ${ZBX_SERVER}
    user: root
    privileged: true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring-net  # Assign the network

  glpi:
    image: diouxx/glpi
    container_name: ${GLPI_CONTAINER}
    environment:
      TIMEZONE : ${TZ}
      GLPI_DB_HOST : ${GLPI_MYSQL}
      GLPI_DB_USER : ${GLPI_DB_USER}
      GLPI_DB_PASSWORD : ${GLPI_DB_PASSWORD}
      GLPI_DB_NAME : ${GLPI_DB_NAME}
    ports:
      - "8081:80"
    volumes:
      - glpi-storage:/var/www/html
      - ./stack/glpi/apache_status.conf:/etc/apache2/conf-enabled/status.conf:ro
    depends_on:
      - ${ZBX_MYSQL}
    networks:
      - monitoring-net
    restart: unless-stopped

  glpi-mysql:
    image: mysql:8.0 # Use the latest Mysql image
    container_name: ${GLPI_MYSQL} # Set the container name
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${GLPI_DB_NAME}
      MYSQL_USER: ${GLPI_DB_USER}
      MYSQL_PASSWORD: ${GLPI_DB_PASSWORD}
      TZ: ${TZ}
    command: 
      - --character-set-server=utf8mb4 
      - --collation-server=utf8mb4_bin
      - --log-bin-trust-function-creators=1
    ports:
      - "3307:3306"
    volumes:
      - glpi-mysql-storage:/var/lib/mysql # Persist MySql data
    networks:
      - monitoring-net  # Assign the network
    restart: unless-stopped

volumes:
  zabbix-mysql-storage:
  zabbix-storage:
  zabbix-externalscripts:
  grafana-storage:
  glpi-storage:
  glpi-mysql-storage:

networks:
  monitoring-net:
    driver: bridge